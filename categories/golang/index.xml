<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Golang on Yuanchieh&#39;s Blog</title>
		<link>https://yuanchieh.page/categories/golang/</link>
		<description>Recent content in Golang on yuanchieh.page</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en-us</language>
		<lastBuildDate>Tue, 22 Feb 2022 01:21:40 +0000</lastBuildDate>
		
		<atom:link href="https://yuanchieh.page/categories/golang/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>理解 Golang Scheduler</title>
			<link>https://yuanchieh.page/posts/2022/2022-02-22-%E7%90%86%E8%A7%A3-go-scheduler/</link>
			<pubDate>Tue, 22 Feb 2022 01:21:40 +0000</pubDate>
			
			<guid>https://yuanchieh.page/posts/2022/2022-02-22-%E7%90%86%E8%A7%A3-go-scheduler/</guid>
			<description>
				
				Golang 可以併發 (concurrent) 數百萬的 goroutine 執行不同的任務，包含運算與 I/O，延續之前對 I/O 的理解，往 Golang 的 Scheduler 邁進，認識 scheduler 到底如何排程確保 fairness 與 performance
				
			</description>
		</item>
		<item>
			<title>Golang 併發處理 Mutex / RWMutex / SingleFlight</title>
			<link>https://yuanchieh.page/posts/2021/2021-06-06-golang-lock-vs-rwlock/</link>
			<pubDate>Sun, 06 Jun 2021 01:21:40 +0000</pubDate>
			
			<guid>https://yuanchieh.page/posts/2021/2021-06-06-golang-lock-vs-rwlock/</guid>
			<description>
				
				研究 Mutex , RWMutex 性能對比，以及併發下用 SingleFlight 避免擊穿問題
				
			</description>
		</item>
		<item>
			<title>Golang Test - 單元測試、Mock與http handler 測試</title>
			<link>https://yuanchieh.page/posts/2021/2021-03-18-golang-test/</link>
			<pubDate>Thu, 18 Mar 2021 08:21:40 +0000</pubDate>
			
			<guid>https://yuanchieh.page/posts/2021/2021-03-18-golang-test/</guid>
			<description>
				
				分享如何在 Golang 中針對 http server 寫測試，包含單元測試 / 如何針對有外部相依性的物件做 Stub / Mock，以及最後針對 http handler 的 http request 測試
				
			</description>
		</item>
		<item>
			<title>從 Nodejs 到 Golang: Concurrency 實作比較</title>
			<link>https://yuanchieh.page/posts/2021/2021-03-07-%E5%BE%9E-nodejs-%E5%88%B0-golang-concurrency-%E5%AF%A6%E4%BD%9C%E6%AF%94%E8%BC%83/</link>
			<pubDate>Sun, 07 Mar 2021 08:21:40 +0000</pubDate>
			
			<guid>https://yuanchieh.page/posts/2021/2021-03-07-%E5%BE%9E-nodejs-%E5%88%B0-golang-concurrency-%E5%AF%A6%E4%BD%9C%E6%AF%94%E8%BC%83/</guid>
			<description>
				
				Golang / Nodejs 試著透過有效率地使用 Kernel Thread 方式增加 Concurrency 處理能力，但兩者在實作上有不同的方式，以下將比較核心實作差異與語法上使用的不同
				
			</description>
		</item>
		
	</channel>
</rss>
